//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Event_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightAppData.Implementation.AccountItem), "c_Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightAppData.Implementation.EventItem), true)]

#endregion

namespace LightAppData.Implementation
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class LightAppDataObjectContext : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“LightAppDataObjectContext”部分中的连接字符串初始化新 LightAppDataObjectContext 对象。
        /// </summary>
        public LightAppDataObjectContext() : base("name=LightAppDataObjectContext", "LightAppDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 LightAppDataObjectContext 对象。
        /// </summary>
        public LightAppDataObjectContext(string connectionString) : base(connectionString, "LightAppDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 LightAppDataObjectContext 对象。
        /// </summary>
        public LightAppDataObjectContext(EntityConnection connection) : base(connection, "LightAppDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<AccountItem> Account
        {
            get
            {
                if ((_Account == null))
                {
                    _Account = base.CreateObjectSet<AccountItem>("Account");
                }
                return _Account;
            }
        }
        private ObjectSet<AccountItem> _Account;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<EventItem> c_Event
        {
            get
            {
                if ((_c_Event == null))
                {
                    _c_Event = base.CreateObjectSet<EventItem>("c_Event");
                }
                return _c_Event;
            }
        }
        private ObjectSet<EventItem> _c_Event;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Account EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAccount(AccountItem accountItem)
        {
            base.AddObject("Account", accountItem);
        }
    
        /// <summary>
        /// 用于向 c_Event EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToc_Event(EventItem eventItem)
        {
            base.AddObject("c_Event", eventItem);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="AccountItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountItem : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 AccountItem 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="joinDate">JoinDate 属性的初始值。</param>
        /// <param name="status">Status 属性的初始值。</param>
        public static AccountItem CreateAccountItem(global::System.Guid id, global::System.String name, global::System.DateTime joinDate, global::System.Boolean status)
        {
            AccountItem accountItem = new AccountItem();
            accountItem.ID = id;
            accountItem.Name = name;
            accountItem.JoinDate = joinDate;
            accountItem.Status = status;
            return accountItem;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime JoinDate
        {
            get
            {
                return _JoinDate;
            }
            set
            {
                OnJoinDateChanging(value);
                ReportPropertyChanging("JoinDate");
                _JoinDate = value;
                ReportPropertyChanged("JoinDate");
                OnJoinDateChanged();
            }
        }
        private global::System.DateTime _JoinDate;
        partial void OnJoinDateChanging(global::System.DateTime value);
        partial void OnJoinDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = value;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Event_Account", "c_Event")]
        public EntityCollection<EventItem> c_Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventItem>("LightSwitchApplication.FK_Event_Account", "c_Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventItem>("LightSwitchApplication.FK_Event_Account", "c_Event", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="EventItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventItem : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 EventItem 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="topic">Topic 属性的初始值。</param>
        /// <param name="detail">Detail 属性的初始值。</param>
        /// <param name="lanuch">Lanuch 属性的初始值。</param>
        /// <param name="status">Status 属性的初始值。</param>
        /// <param name="aid">Aid 属性的初始值。</param>
        public static EventItem CreateEventItem(global::System.Int32 id, global::System.String topic, global::System.String detail, global::System.DateTime lanuch, global::System.Int32 status, global::System.Guid aid)
        {
            EventItem eventItem = new EventItem();
            eventItem.ID = id;
            eventItem.Topic = topic;
            eventItem.Detail = detail;
            eventItem.Lanuch = lanuch;
            eventItem.Status = status;
            eventItem.Aid = aid;
            return eventItem;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Topic
        {
            get
            {
                return _Topic;
            }
            set
            {
                OnTopicChanging(value);
                ReportPropertyChanging("Topic");
                _Topic = value;
                ReportPropertyChanged("Topic");
                OnTopicChanged();
            }
        }
        private global::System.String _Topic;
        partial void OnTopicChanging(global::System.String value);
        partial void OnTopicChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Detail
        {
            get
            {
                return _Detail;
            }
            set
            {
                OnDetailChanging(value);
                ReportPropertyChanging("Detail");
                _Detail = value;
                ReportPropertyChanged("Detail");
                OnDetailChanged();
            }
        }
        private global::System.String _Detail;
        partial void OnDetailChanging(global::System.String value);
        partial void OnDetailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Lanuch
        {
            get
            {
                return _Lanuch;
            }
            set
            {
                OnLanuchChanging(value);
                ReportPropertyChanging("Lanuch");
                _Lanuch = value;
                ReportPropertyChanged("Lanuch");
                OnLanuchChanged();
            }
        }
        private global::System.DateTime _Lanuch;
        partial void OnLanuchChanging(global::System.DateTime value);
        partial void OnLanuchChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = value;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Aid
        {
            get
            {
                return _Aid;
            }
            set
            {
                OnAidChanging(value);
                ReportPropertyChanging("Aid");
                _Aid = value;
                ReportPropertyChanged("Aid");
                OnAidChanged();
            }
        }
        private global::System.Guid _Aid;
        partial void OnAidChanging(global::System.Guid value);
        partial void OnAidChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Event_Account", "Account")]
        public AccountItem AccountItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountItem>("LightSwitchApplication.FK_Event_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountItem>("LightSwitchApplication.FK_Event_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountItem> AccountItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountItem>("LightSwitchApplication.FK_Event_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountItem>("LightSwitchApplication.FK_Event_Account", "Account", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
