

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// 没有可用的模块化说明
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class EventItem : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// 初始化 EventItem 实体的新实例。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EventItem()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EventItem(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.EventItem> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.EventItem.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EventItem_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EventItem_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// 获取此应用程序的 Application 对象。Application 对象可提供对活动屏幕的访问权限、用于打开屏幕的方法以及对当前用户的访问权限。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// 获取包含数据工作区。该数据工作区可提供对应用程序中所有数据源的访问权限。
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// 没有可用的模块化说明
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.EventItem.DetailsClass.GetValue(this, global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// 没有可用的模块化说明
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Topic
        {
            get
            {
                return global::LightSwitchApplication.EventItem.DetailsClass.GetValue(this, global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.Topic);
            }
            set
            {
                global::LightSwitchApplication.EventItem.DetailsClass.SetValue(this, global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.Topic, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topic_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topic_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topic_Changed();

        /// <summary>
        /// 没有可用的模块化说明
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Detail
        {
            get
            {
                return global::LightSwitchApplication.EventItem.DetailsClass.GetValue(this, global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.Detail);
            }
            set
            {
                global::LightSwitchApplication.EventItem.DetailsClass.SetValue(this, global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.Detail, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Detail_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Detail_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Detail_Changed();

        /// <summary>
        /// 没有可用的模块化说明
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime Lanuch
        {
            get
            {
                return global::LightSwitchApplication.EventItem.DetailsClass.GetValue(this, global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.Lanuch);
            }
            set
            {
                global::LightSwitchApplication.EventItem.DetailsClass.SetValue(this, global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.Lanuch, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Lanuch_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Lanuch_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Lanuch_Changed();

        /// <summary>
        /// 没有可用的模块化说明
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Status
        {
            get
            {
                return global::LightSwitchApplication.EventItem.DetailsClass.GetValue(this, global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.EventItem.DetailsClass.SetValue(this, global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// 没有可用的模块化说明
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.AccountItem AccountItem
        {
            get
            {
                return global::LightSwitchApplication.EventItem.DetailsClass.GetValue(this, global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.AccountItem);
            }
            set
            {
                global::LightSwitchApplication.EventItem.DetailsClass.SetValue(this, global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.AccountItem, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountItem_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountItem_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountItem_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.EventItem,
                global::LightSwitchApplication.EventItem.DetailsClass,
                global::LightSwitchApplication.EventItem.DetailsClass.IImplementation,
                global::LightSwitchApplication.EventItem.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass>.Entry
                __EventItemEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass>.Entry(
                    global::LightSwitchApplication.EventItem.DetailsClass.__EventItem_CreateNew,
                    global::LightSwitchApplication.EventItem.DetailsClass.__EventItem_Created,
                    global::LightSwitchApplication.EventItem.DetailsClass.__EventItem_AllowSaveWithErrors);
            private static global::LightSwitchApplication.EventItem __EventItem_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.EventItem> es)
            {
                return new global::LightSwitchApplication.EventItem(es);
            }
            private static void __EventItem_Created(global::LightSwitchApplication.EventItem e)
            {
                e.EventItem_Created();
            }
            private static bool __EventItem_AllowSaveWithErrors(global::LightSwitchApplication.EventItem e)
            {
                bool result = false;
                e.EventItem_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.EventItem.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, string> Topic
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.Topic) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, string> Detail
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.Detail) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, global::System.DateTime> Lanuch
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.Lanuch) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, int> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, global::LightSwitchApplication.AccountItem> AccountItem
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.AccountItem) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, global::LightSwitchApplication.AccountItem>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string Topic { get; set; }
                new string Detail { get; set; }
                new global::System.DateTime Lanuch { get; set; }
                new int Status { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AccountItem { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EventItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, int>.Data> c, global::LightSwitchApplication.EventItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.EventItem e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.EventItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.EventItem e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, string>.Entry
                    Topic = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, string>.Entry(
                        "Topic",
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Topic_Stub,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Topic_ComputeIsReadOnly,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Topic_Validate,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Topic_GetImplementationValue,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Topic_SetImplementationValue,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Topic_OnValueChanged);
                private static void _Topic_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EventItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.EventItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Topic, sf);
                }
                private static bool _Topic_ComputeIsReadOnly(global::LightSwitchApplication.EventItem e)
                {
                    bool result = false;
                    e.Topic_IsReadOnly(ref result);
                    return result;
                }
                private static void _Topic_Validate(global::LightSwitchApplication.EventItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Topic_Validate(r);
                }
                private static string _Topic_GetImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Topic;
                }
                private static void _Topic_SetImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Topic = v;
                }
                private static void _Topic_OnValueChanged(global::LightSwitchApplication.EventItem e)
                {
                    e.Topic_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, string>.Entry
                    Detail = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, string>.Entry(
                        "Detail",
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Detail_Stub,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Detail_ComputeIsReadOnly,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Detail_Validate,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Detail_GetImplementationValue,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Detail_SetImplementationValue,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Detail_OnValueChanged);
                private static void _Detail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EventItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.EventItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Detail, sf);
                }
                private static bool _Detail_ComputeIsReadOnly(global::LightSwitchApplication.EventItem e)
                {
                    bool result = false;
                    e.Detail_IsReadOnly(ref result);
                    return result;
                }
                private static void _Detail_Validate(global::LightSwitchApplication.EventItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Detail_Validate(r);
                }
                private static string _Detail_GetImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Detail;
                }
                private static void _Detail_SetImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Detail = v;
                }
                private static void _Detail_OnValueChanged(global::LightSwitchApplication.EventItem e)
                {
                    e.Detail_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, global::System.DateTime>.Entry
                    Lanuch = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, global::System.DateTime>.Entry(
                        "Lanuch",
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Lanuch_Stub,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Lanuch_ComputeIsReadOnly,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Lanuch_Validate,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Lanuch_GetImplementationValue,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Lanuch_SetImplementationValue,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Lanuch_OnValueChanged);
                private static void _Lanuch_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EventItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.EventItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Lanuch, sf);
                }
                private static bool _Lanuch_ComputeIsReadOnly(global::LightSwitchApplication.EventItem e)
                {
                    bool result = false;
                    e.Lanuch_IsReadOnly(ref result);
                    return result;
                }
                private static void _Lanuch_Validate(global::LightSwitchApplication.EventItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Lanuch_Validate(r);
                }
                private static global::System.DateTime _Lanuch_GetImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Lanuch;
                }
                private static void _Lanuch_SetImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.Lanuch = global::LightSwitchApplication.EventItem.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Lanuch_OnValueChanged(global::LightSwitchApplication.EventItem e)
                {
                    e.Lanuch_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, int>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, int>.Entry(
                        "Status",
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EventItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, int>.Data> c, global::LightSwitchApplication.EventItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.EventItem e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.EventItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static int _Status_GetImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.EventItem e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, global::LightSwitchApplication.AccountItem>.Entry
                    AccountItem = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, global::LightSwitchApplication.AccountItem>.Entry(
                        "AccountItem",
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._AccountItem_Stub,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._AccountItem_ComputeIsReadOnly,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._AccountItem_Validate,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._AccountItem_GetCoreImplementationValue,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._AccountItem_GetImplementationValue,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._AccountItem_SetImplementationValue,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._AccountItem_Refresh,
                        global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties._AccountItem_OnValueChanged);
                private static void _AccountItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EventItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, global::LightSwitchApplication.AccountItem>.Data> c, global::LightSwitchApplication.EventItem.DetailsClass d, object sf)
                {
                    c(d, ref d._AccountItem, sf);
                }
                private static bool _AccountItem_ComputeIsReadOnly(global::LightSwitchApplication.EventItem e)
                {
                    bool result = false;
                    e.AccountItem_IsReadOnly(ref result);
                    return result;
                }
                private static void _AccountItem_Validate(global::LightSwitchApplication.EventItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AccountItem_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AccountItem_GetCoreImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass d)
                {
                    return d.ImplementationEntity.AccountItem;
                }
                private static global::LightSwitchApplication.AccountItem _AccountItem_GetImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.AccountItem, global::LightSwitchApplication.AccountItem.DetailsClass>(global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.AccountItem, ref d._AccountItem);
                }
                private static void _AccountItem_SetImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass d, global::LightSwitchApplication.AccountItem v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.AccountItem, ref d._AccountItem, (i, ev) => i.AccountItem = ev, v);
                }
                private static void _AccountItem_Refresh(global::LightSwitchApplication.EventItem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.EventItem.DetailsClass.PropertySetProperties.AccountItem, ref d._AccountItem);
                }
                private static void _AccountItem_OnValueChanged(global::LightSwitchApplication.EventItem e)
                {
                    e.AccountItem_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, string>.Data _Topic;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, string>.Data _Detail;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, global::System.DateTime>.Data _Lanuch;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, int>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EventItem, global::LightSwitchApplication.EventItem.DetailsClass, global::LightSwitchApplication.AccountItem>.Data _AccountItem;
            
        }
    
        #endregion
    }
    
    #endregion
}
